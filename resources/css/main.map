{
	"version": 3,
	"file": "../sass/main.css",
	"sources": [
		"../sass/main.scss",
		"../sass/base/_fontsetup.scss",
		"../sass/base/_colorsetup.scss",
		"../sass/abstracts/_mixins.scss"
	],
	"sourcesContent": [
		"@import 'base/fontsetup';\r\n@import 'base/colorsetup';\r\n@import 'abstracts/mixins';\r\n\r\nhtml {\r\n    scroll-behavior: smooth;\r\n}\r\n\r\nbody {\r\n    color: $color-font-norm;\r\n    font-family: $font-family-norm;\r\n    font-weight: $font-weight-norm;\r\n    font-size: $font-size-norm;\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n}\r\nh1 {\r\n    font-size: $font-size-h1; \r\n    font-family: $font-family-head; \r\n    font-weight: $font-weight-bold; \r\n}\r\nh2 {\r\n    font-size: $font-size-h2; \r\n    font-family: $font-family-head; \r\n    font-weight: $font-weight-bold; \r\n}\r\na {\r\n    text-decoration: none;\r\n}\r\n\r\n\r\n\r\n\r\n.nav-menu {\r\n    \r\n        \r\n    // Definer grid til navigation\r\n    $selector: \".nav-grid\";\r\n    $grid-fraction: 12;\r\n    $grid-template-rows: null;\r\n    $grid-column-gap: null;\r\n    $grid-background-color: $nav-color-back;\r\n    $desktop-width: 1024px;\r\n    $tablet-width: 768px;\r\n    @include grid-def-sel ($selector, $grid-fraction, $grid-template-rows, $grid-column-gap, $grid-background-color) {\r\n        // Place optinal content to grid \r\n       \r\n    ul {\r\n        text-align: left;\r\n   \r\n    li {\r\n        list-style-type: none;\r\n        display: inline-block;\r\n        margin-right: 2vw; \r\n        a {\r\n            color: $color-back;\r\n            font-family: $font-family-norm;\r\n            font-weight: $font-weight-norm;\r\n        }\r\n        a:hover {\r\n            background-color: inherit;\r\n        }\r\n        a:active {\r\n            background-color: inherit;\r\n        }\r\n        a:focus {\r\n            background-color: inherit;\r\n        }\r\n    }\r\n    \r\n    }\r\n\r\n    .menu-item {\r\n        grid-column: span 12;\r\n        width: 100vw; \r\n        @include mq-desktop ($desktop-width) {\r\n            width: $desktop-width; \r\n        }\r\n        @include mq-tablet ($tablet-width, $desktop-width) {\r\n            width: $tablet-width; \r\n        }\r\n        margin: auto; \r\n    }\r\n    }\r\n}\r\n\r\n.nav-btn {\r\n  \r\n    cursor: pointer;\r\n  }\r\n  \r\n  /* Style the active class (and buttons on mouse-over) */\r\n  .active {\r\n    background-color: inherit;\r\n    \r\n  }\r\n\r\n.main-btn {\r\n  \r\n    cursor: pointer;\r\n  }\r\n  \r\n  /* Style the active class (and buttons on mouse-over) */\r\n  .active {\r\n    background-color: inherit;\r\n    \r\n  }\r\nimg {\r\n    width: 100%;\r\n}\r\n.main-wrapper {\r\n    width: 100vw;\r\n    margin: auto;\r\n    @include mq-tablet ($tablet-width, $desktop-width) {\r\n        width: $tablet-width;\r\n    }\r\n    @include mq-desktop ($desktop-width) {\r\n        width: $desktop-width;\r\n    }\r\n}\r\n// Definer grid \r\n$selector: \".main-grid\";\r\n$grid-fraction: 12;\r\n$grid-template-rows: null;\r\n$grid-column-gap: null;\r\n$grid-background-color: $color-back;\r\n@include grid-def-sel ($selector, $grid-fraction, $grid-template-rows, $grid-column-gap, $grid-background-color) {\r\n    // Place optinal content to grid \r\n    // grid-template-columns: 1fr 30vw 20vw 1fr;\r\n}\r\n.place-item {\r\n    grid-column: span 12;\r\n    @include mq-tablet1 () {\r\n        grid-column: span 6;\r\n    }\r\n    padding-left: 2vmin; \r\n}\r\n$border-width: 4px;\r\n$border-style: solid;\r\n$border-radius: 50%;\r\n$border-color: $color-border-img;\r\n$selector: \".klaes\";\r\n@if $selector==null {\r\n    .billed {\r\n        @include border-def ($border-width, $border-style, $border-radius, $border-color);\r\n        margin: 5vmin;\r\n    }\r\n}\r\n@else {\r\n    @include border-def-sel ($selector, $border-width, $border-style, $border-radius, $border-color);\r\n}",
		"$font-family-norm: 'Open Sans', sans-serif;\r\n$font-family-head: 'Patrick Hand', cursive; \r\n\r\n$font-weight-norm: 400; \r\n$font-weight-bold: 700; \r\n\r\n// Fluid responsive font-size \r\n// Initiate $font-size-base, $screen-size-min, $screen-size-max \r\n// Calculation of font-size-norm is inspired by calcultor: https://websemantics.uk/tools/responsive-font-calculator/\r\n// Calculation of font-size for h1, h2, h3, h4, h5, h6 is found on w3schools: https://www.w3schools.com/TAGS/tag_hn.asp\r\n// Font size for navigation is due to customer specification\r\n\r\n$font-size-base: 1em; \r\n$screen-size-min: 320px;\r\n$screen-size-max: 1540px;\r\n\r\n/* 1em(16px) @ 30em(480px) increasing to 2em(32px) @ 120em(1920px) */\r\n@media (min-width: 30em) {\r\n    :root {\r\n      $ont-size: calc(1rem + ((1vw - 0.3em) * 1.1111));\r\n      /* Where: * 1.1111 = 100 * font_Size_Difference / viewport_Width_Difference */\r\n    }\r\n  }\r\n\r\n$font-size-min: #{$font-size-base * 0.75};\r\n$font-size-max: #{$font-size-base * 2.0};\r\n\r\n$font-size-norm: calc((#{$font-size-min} + (1vw + 0.3em) * (100 * #{$font-size-max} - #{$font-size-min} / #{$screen-size-max} - #{$screen-size-min}))); \r\n\r\n\r\n$font-size-h1: calc(#{$font-size-norm} * 2.0); \r\n$font-size-h2: calc(#{$font-size-norm} * 1.5); \r\n$font-size-h3: calc(#{$font-size-norm} * 1.17); \r\n$font-size-h4: calc(#{$font-size-norm} * 1.0); \r\n$font-size-h5: calc(#{$font-size-norm} * 0.83); \r\n$font-size-h6: calc(#{$font-size-norm} * 0.67); \r\n \r\n$font-size-nav: calc(#{$font-size-norm} * 2.0);\r\n",
		"// Colors \r\n$color-primary-baby: #ddc3de; \r\n$color-primary-girl: #c29999;\r\n$color-primary-boy: #99c2bf; \r\n\r\n$color-secondary-baby: #9bb2ce ; \r\n$color-secondary-girl: #c76e6e;\r\n$color-secondary-boy: #6ec7c1; \r\n\r\n$color-back-baby: #f4d6dd;\r\n$color-back-girl: #ddc3de; \r\n$color-back-boy: #dae6e5;\r\n\r\n$color-border-img: #fff; \r\n$color-border-nav: #ffa500; \r\n\r\n// color-back er kun synlig mellem afsnit på siden (margin)\r\n$color-back: #fff; \r\n$color-font-norm: #fff; \r\n$color-font-head: #fff; \r\n\r\n$default-border-color: $color-border-img; \r\n$nav-color-back: linear-gradient (to bottom, #{$color-back-boy} 0%, #{$color-back-boy} 50%, #{$color-back-girl} 50%, #{$color-back-girl} 100%);\r\n$nav-color-back: linear-gradient (to bottom, $color-back-boy 0%, $color-back-boy 50%, $color-back-girl 50%, $color-back-girl 100%);\r\n\r\n$nav-color-back: linear-gradient(to bottom, #dae6e5 0%, #dae6e5 50% , #ddc3de 50%, #ddc3de 100%)",
		"// **************************************************\r\n// Mixin library\r\n// Contains all sort of mixix\r\n// ***************************************************/\r\n// **************************************************\r\n// Media queries for screen\r\n// Set default for all media queries\r\n// ***************************************************/\r\n$mqBuffer: 1px !default;\r\n$tablet-width: 768px !default;\r\n$desktop-width: 1024px !default;\r\n\r\n/// Mixin to make mediaqueries for phone, tablet and desktop\r\n/// Changes to content are made in this mixin. Example in comment\r\n/// Use like: @include media-queries ($tablet-width, $desktop-width)\r\n@mixin media-queries($tablet-width, $desktop-width) {\r\n  @media screen and (max-width: #{$tablet-width - $mqBuffer}) {\r\n    // /* Mediaquery for Phones */\r\n  }\r\n\r\n  @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - $mqBuffer}) {\r\n    // /* Mediaquery for tablet */\r\n  }\r\n\r\n  @media (min-width: #{$desktop-width}) {\r\n    // /* Mediaquery for desktop */\r\n    // .grid-prod-img {\r\n    //     grid-column: 2 / 5; \r\n    // }\r\n    // .grid-prod-text {\r\n    //     grid-column: 5 / 11; \r\n    // }\r\n  }\r\n}\r\n\r\n/// Mixin to make mediaquery for phone\r\n/// Changes are set up from call and inserted via @content\r\n/// Use like: @include mq-phone ($tablet-width)\r\n@mixin mq-phone ($tablet-width) {\r\n  @media screen and (max-width: #{$tablet-width - $mqBuffer}) {\r\n    /* PHONE MQ */\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Mixin to make mediaquery for tablet\r\n/// Changes are set up from call and inserted via @content\r\n/// Use like: @include mq-tablet ($tablet-width, $destop-width)\r\n/// mq-tablet1 is used when there's no mq for desktop\r\n@mixin mq-tablet ($tablet-width, $destop-width) {\r\n  @media screen and (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - $mqBuffer}) {\r\n    /* TABLET MQ */\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin mq-tablet1 {\r\n  @media screen and (min-width: #{$tablet-width}) {\r\n    /* TABLET MQ */\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Mixin to make mediaquery for desktop\r\n/// Changes are set up from call and inserted via @content\r\n/// Use like: @include mq-desktop ($destop-width)\r\n@mixin mq-desktop ($destop-width) {\r\n  @media screen and (min-width: #{$desktop-width}) {\r\n    /* DESKTOP MQ */\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Mixin to make custom mediaqueries\r\n/// Changes are set up from call and inserted via @content\r\n/// Use like: @include mq-tablet ($min, $max)\r\n@mixin mq-custom($min, $max) {\r\n  @media screen and (min-width: #{$min}) and (max-width: #{$max - $mqBuffer}) {\r\n    /* CUSTOM MQ */\r\n    @content;\r\n  }\r\n}\r\n\r\n// **************************************************\r\n// Definition grid\r\n// Set default \r\n// ***************************************************/\r\n$grid-klaes: null !default; \r\n$grid-fraction: 12 !default;\r\n$grid-margin-aside: null !default;\r\n$grid-rows: null !default;\r\n$grid-gap: null !default;\r\n$grid-background-color: inherit !default;\r\n\r\n/// Define grid without class and with variable classname \r\n/// Changes to content are made both in this mixin and via @content.\r\n/// without class: @include grid-def ($grid-fraction, ¤grid-template-rows, $grid-column-gap,$grid-background-color)\r\n/// with class: @include grid-def-sel ($selector $grid-fraction, ¤grid-template-rows, $grid-column-gap,$grid-background-color)\r\n@mixin grid-def ($grid-fraction, $grid-template-rows, $grid-column-gap, $grid-background-color) {\r\n   \r\n    display: grid;\r\n    \r\n    @if $grid-fraction > 0 {\r\n      grid-template-columns: repeat($grid-fraction, 1fr);\r\n    }\r\n\r\n    @if $grid-template-rows=null {\r\n      grid-template-rows: auto;\r\n    }\r\n\r\n    @else {\r\n      grid-template-rows: $grid-template-rows\r\n    }\r\n\r\n    background: $grid-background-color;\r\n\r\n    @content;\r\n  }\r\n\r\n  @mixin grid-def-sel ($selector, $grid-fraction, $grid-template-rows, $grid-column-gap, $grid-background-color) {\r\n    #{$selector} {\r\n      @include grid-def ($grid-fraction, $grid-template-rows, $grid-column-gap, $grid-background-color)\r\n    }\r\n\r\n    @content;\r\n  }\r\n\r\n\r\n// **************************************************\r\n// Definition border\r\n// Set default \r\n// ***************************************************/\r\n$border-width: 0 !default;\r\n$border-style: solid !default;\r\n$border-radius: 0 !default;\r\n$border-color: $default-border-color !default;\r\n$selector: null !default;\r\n\r\n/// Mixin to define border\r\n/// Changes to content are made in this mixin.\r\n/// Use like: @include def-border ($border-width, $border-style, $border-radius, $border-color)\r\n/// \r\n@mixin border-def($border-width, $border-style, $border-radius, $border-color) {\r\n  border-width: $border-width;\r\n  border-style: $border-style;\r\n  border-radius: $border-radius;\r\n  border-color: $border-color;\r\n  box-sizing: border-box;\r\n}\r\n\r\n@mixin border-def-sel ($selector, $border-width, $border-style, $border-radius, $border-color) {\r\n  #{$selector} {\r\n    @include border-def($border-width, $border-style, $border-radius, $border-color)\r\n  }\r\n}\r\n\r\n/// Center content in container \r\n/// Changes to content are made in this mixin.\r\n/// Use like: @include center-content \r\n@mixin center-content {\r\n  .center-content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n}\r\n\r\n/// Set shadow on an item\r\n/// Changes to content are made set external \r\n/// Use like: @include item-shadow\r\n@mixin item-shadow {\r\n  .shadow-class {\r\n    @content\r\n  }\r\n}\r\n \r\n/// Set scale on an item\r\n/// Changes to content are made in this mixin\r\n/// Use like: @include item-scale ($ratio)\r\n@mixin item-scale ($ratio) {\r\n    -webkit-transform: scale($ratio);\r\n       -moz-transform: scale($ratio);\r\n        -ms-transform: scale($ratio);\r\n         -o-transform: scale($ratio);\r\n            transform: scale($ratio);\r\n  \r\n}\r\n\r\n@mixin text-shadow ($string: 0 1px 3px rgba(0, 0, 0, 0.25)) {\r\n  text-shadow: $string;\r\n}\r\n@mixin box-shadow ($string) {\r\n  -webkit-box-shadow: $string;\r\n  -moz-box-shadow:    $string;\r\n  box-shadow:         $string;\r\n}\r\n@mixin drop-shadow ($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: 0.25) {\r\n  -webkit-box-shadow:     $x $y $blur $spread rgba(0, 0, 0, $alpha);\r\n  -moz-box-shadow:        $x $y $blur $spread rgba(0, 0, 0, $alpha);\r\n  box-shadow:             $x $y $blur $spread rgba(0, 0, 0, $alpha);\r\n}\r\n@mixin inner-shadow ($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: 0.25) {\r\n  -webkit-box-shadow: inset $x $y $blur $spread rgba(0, 0, 0, $alpha);\r\n  -moz-box-shadow:    inset $x $y $blur $spread rgba(0, 0, 0, $alpha);\r\n  box-shadow:         inset $x $y $blur $spread rgba(0, 0, 0, $alpha);\r\n}\r\n\r\n@mixin box-sizing ($type: border-box) {\r\n  -webkit-box-sizing: $type;\r\n  -moz-box-sizing:    $type;\r\n  box-sizing:         $type;\r\n}\r\n\r\n@mixin border-radius ($radius: 5px) {\r\n  -webkit-border-radius: $radius;\r\n  -moz-border-radius:    $radius;\r\n  border-radius:         $radius;\r\n\r\n  -moz-background-clip:    padding;\r\n  -webkit-background-clip: padding-box;\r\n  background-clip:         padding-box;\r\n}\r\n@mixin border-radiuses ($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0) {\r\n  -webkit-border-top-right-radius:    $topright;\r\n  -webkit-border-bottom-right-radius: $bottomright;\r\n  -webkit-border-bottom-left-radius:  $bottomleft;\r\n  -webkit-border-top-left-radius:     $topleft;\r\n\r\n  -moz-border-radius-topright:        $topright;\r\n  -moz-border-radius-bottomright:     $bottomright;\r\n  -moz-border-radius-bottomleft:      $bottomleft;\r\n  -moz-border-radius-topleft:         $topleft;\r\n\r\n  border-top-right-radius:            $topright;\r\n  border-bottom-right-radius:         $bottomright;\r\n  border-bottom-left-radius:          $bottomleft;\r\n  border-top-left-radius:             $topleft;\r\n\r\n  -moz-background-clip:    padding;\r\n  -webkit-background-clip: padding-box;\r\n  background-clip:         padding-box;\r\n}\r\n\r\n@mixin opacity ($opacity: 0.5) {\r\n  -webkit-opacity:        $opacity;\r\n  -moz-opacity:           $opacity;\r\n  opacity:                $opacity;\r\n}\r\n\r\n@mixin scale ($factor) {\r\n  transform:            scale($factor,$factor);\r\n  -webkit-transform:      scale($factor,$factor);\r\n  -moz-transform:          scale($factor,$factor);\r\n  -ms-transform:           scale($factor,$factor);\r\n  -o-transform:            scale($factor,$factor);\r\n}\r\n\r\n// @mixin ahref ($a-color: $color-back) {\r\n//   color: $a-color;\r\n//         font-family: $font-family-norm;\r\n//     font-weight: $font-weight-norm; \r\n//     font-size: $font-size-nav; \r\n//     :hover {\r\n\r\n//     }\r\n// }"
	],
	"mappings": "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",
	"names": []
}